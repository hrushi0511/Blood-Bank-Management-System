{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrush\\\\Desktop\\\\FS mini project 2\\\\frontend\\\\blood-bank-managment-system\\\\src\\\\components\\\\ReportModal.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReportModal(params) {\n  _s();\n  const [report, setReport] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const report_url = 'http://127.0.0.1:8000/getreport';\n      const donor_url = 'http://127.0.0.1:8000/searchdonor';\n      let response = await axios.post(report_url, params.show);\n      if (response.status == 200) {\n        let price = response.data['Price'];\n        let donors = response.data['Donor ID'];\n        let donor_details = [];\n        for (var i = 0; i < donors.length; i++) {\n          let donor = donors[i];\n          let donor_id = donor[0];\n          let units = donor[1];\n          let response = await axios.post(donor_url, {\n            'ID': donor_id\n          });\n          if (response.status == 200) {\n            let data = {\n              'Donor ID': response.data['ID'],\n              'Donor Name': response.data['Name'],\n              'Units': units\n            };\n            donor_details.push(data);\n          }\n        }\n        setReport({\n          'Seeker ID': params.show['ID'],\n          'Seeker Name': params.show['Name'],\n          'Date': params.show['Date'],\n          'Blood Group': params.show['Blood Group'],\n          'Units': params.show['Units'],\n          'Price of Each Unit': price,\n          'Donors': donor_details,\n          'Total': price * params.show['Units']\n        });\n      } else {\n        setReport(-1);\n      }\n    }\n    fetchData();\n  }, []);\n  let seeker_labels = ['Seeker ID', 'Seeker Name', 'Date', 'Blood Group', 'Units', 'Price of Each Unit', 'Donors', 'Total'];\n  let donor_labels = ['Donor ID', 'Donor Name', 'Units'];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"my-modal\",\n    show: params.show != false,\n    onHide: params.onHide,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: seeker_labels.map((title, index) => {\n        return /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), title != 'Donors' ? /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: report[title],\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: report[title].map((donor, ind) => {\n              donor_labels.map((donor_title, ind1) => {});\n            })\n          }, void 0, false)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportModal, \"uThrKXSG04i7dx6XISsv8ngoHQ0=\");\n_c = ReportModal;\nvar _c;\n$RefreshReg$(_c, \"ReportModal\");","map":{"version":3,"names":["axios","React","useEffect","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ReportModal","params","_s","report","setReport","fetchData","report_url","donor_url","response","post","show","status","price","data","donors","donor_details","i","length","donor","donor_id","units","push","seeker_labels","donor_labels","className","onHide","size","centered","children","Header","closeButton","Title","id","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","title","index","Form","Group","controlId","Label","Control","type","value","disabled","ind","donor_title","ind1","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/FS mini project 2/frontend/blood-bank-managment-system/src/components/ReportModal.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nexport default function ReportModal(params) {\r\n    const [report, setReport] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const report_url = 'http://127.0.0.1:8000/getreport'\r\n            const donor_url = 'http://127.0.0.1:8000/searchdonor'\r\n            let response = await axios.post(report_url,params.show)\r\n            if(response.status == 200){\r\n                let price = response.data['Price']\r\n                let donors = response.data['Donor ID']\r\n                let donor_details = []\r\n                for(var i = 0; i < donors.length; i++){\r\n                    let donor = donors[i]\r\n                    let donor_id = donor[0]\r\n                    let units = donor[1]\r\n                    let response = await axios.post(donor_url,{'ID' : donor_id})\r\n                    if(response.status == 200){\r\n                        let data = {\r\n                            'Donor ID' : response.data['ID'],\r\n                            'Donor Name' : response.data['Name'],\r\n                            'Units' : units\r\n                        }\r\n                        donor_details.push(data)\r\n                    }\r\n                }\r\n                setReport({\r\n                    'Seeker ID' : params.show['ID'],\r\n                    'Seeker Name' : params.show['Name'],\r\n                    'Date' : params.show['Date'],\r\n                    'Blood Group' : params.show['Blood Group'],\r\n                    'Units' : params.show['Units'],\r\n                    'Price of Each Unit' : price,\r\n                    'Donors' : donor_details,\r\n                    'Total' : price * params.show['Units']\r\n                })\r\n            }\r\n            else{\r\n                setReport(-1);\r\n            }\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    let seeker_labels = ['Seeker ID','Seeker Name', 'Date', 'Blood Group', 'Units', 'Price of Each Unit',\r\n    'Donors','Total']\r\n    let donor_labels = ['Donor ID', 'Donor Name', 'Units']\r\n\r\n\r\n  return (\r\n    <Modal className=\"my-modal\"\r\n    show = {params.show != false}\r\n    onHide = {params.onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Report\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {   \r\n        seeker_labels.map((title,index)=>{\r\n            return <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" key={index}>\r\n                        <Form.Label>{title}</Form.Label>\r\n                        {title != 'Donors' ? <Form.Control type=\"text\"\r\n                        value = {report[title] }\r\n                        disabled={true}/> : <>\r\n                            {\r\n                                report[title].map((donor,ind)=>{\r\n                                    donor_labels.map((donor_title,ind1)=>{\r\n                                        \r\n                                    })\r\n                                })\r\n                            }\r\n                        </>}\r\n                    </Form.Group>\r\n        })\r\n        }\r\n      </Modal.Body>\r\n      \r\n    </Modal>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}