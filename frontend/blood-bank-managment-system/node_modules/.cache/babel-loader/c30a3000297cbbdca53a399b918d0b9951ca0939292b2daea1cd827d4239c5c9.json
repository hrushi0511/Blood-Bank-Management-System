{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contents(params) {\n  _s();\n  let base_url = 'http://127.0.0.1:8000';\n  let url_post_fix = {\n    'Blood Donors': '/getdonors',\n    'Blood Seekers': '/getseekers',\n    'Blood Inventory': '/getinventory'\n  };\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    async function hello() {\n      try {\n        let response = await axios.get(base_url + url_post_fix[params.activeKey]);\n        if (response.status == 200) {\n          setData(response.data);\n        } else {\n          setData(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    hello();\n  }, [params.activeKey]);\n  return data != null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Error Occure\"\n  }, void 0, false);\n}\n_s(Contents, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Contents;\nvar _c;\n$RefreshReg$(_c, \"Contents\");","map":{"version":3,"names":["React","useEffect","useState","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","Contents","params","_s","base_url","url_post_fix","data","setData","hello","response","get","activeKey","status","error","console","log","children","_c","$RefreshReg$"],"sources":["C:/Users/hrush/Desktop/FS mini project 2/frontend/blood-bank-managment-system/src/components/Contents.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nexport default function Contents(params) {\r\n    let base_url = 'http://127.0.0.1:8000'\r\n    let url_post_fix = {\r\n        'Blood Donors' : '/getdonors',\r\n        'Blood Seekers': '/getseekers',\r\n        'Blood Inventory' :'/getinventory'\r\n    }\r\n    const [data, setData] = useState(null)\r\n    useEffect(()=>{\r\n        async function hello(){\r\n            try {\r\n                let response = await axios.get(base_url + url_post_fix[params.activeKey])\r\n                if(response.status == 200){\r\n                    setData(response.data)\r\n                }\r\n                else{\r\n                    setData(null)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        hello();\r\n    },[params.activeKey])\r\n\r\n  return data != null ?\r\n  <></> : <>Error Occure</>\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,eAAe,SAASC,QAAQA,CAACC,MAAM,EAAE;EAAAC,EAAA;EACrC,IAAIC,QAAQ,GAAG,uBAAuB;EACtC,IAAIC,YAAY,GAAG;IACf,cAAc,EAAG,YAAY;IAC7B,eAAe,EAAE,aAAa;IAC9B,iBAAiB,EAAE;EACvB,CAAC;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtCD,SAAS,CAAC,MAAI;IACV,eAAec,KAAKA,CAAA,EAAE;MAClB,IAAI;QACA,IAAIC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACN,QAAQ,GAAGC,YAAY,CAACH,MAAM,CAACS,SAAS,CAAC,CAAC;QACzE,IAAGF,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAC;UACtBL,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;QAC1B,CAAC,MACG;UACAC,OAAO,CAAC,IAAI,CAAC;QACjB;MACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;IACAL,KAAK,CAAC,CAAC;EACX,CAAC,EAAC,CAACN,MAAM,CAACS,SAAS,CAAC,CAAC;EAEvB,OAAOL,IAAI,IAAI,IAAI,gBACnBN,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBAAGE,OAAA,CAAAF,SAAA;IAAAkB,QAAA,EAAE;EAAY,gBAAE,CAAC;AAC3B;AAACb,EAAA,CA3BuBF,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}